from telebot import types

from sheet_handler import *

# –≥–ª–∞–≤–Ω–∞—è –≥—Ä—É–ø–ø–∞ –∫–Ω–æ–ø–æ–∫ (–æ–ø–µ—Ä–∞—Ü–∏–∏, –æ—Å—Ç–∞—Ç–∫–∏, –æ—Ç—á–µ—Ç—ã, –æ—á–∏—Å—Ç–∫–∞) [inline]
main_markup = types.InlineKeyboardMarkup()

main_markup.add(types.InlineKeyboardButton('üìù –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—â–∏–µ –æ—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ', callback_data='stocks'))
main_markup.add(types.InlineKeyboardButton('üìä –¢–µ–∫—É—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ',
                                           callback_data='stock_positions'))
main_markup.add(types.InlineKeyboardButton('‚ûó –û–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ', callback_data='operations'))
main_markup.add(types.InlineKeyboardButton('üì¶ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã', callback_data='production_report'))
main_markup.add(types.InlineKeyboardButton('üìà –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á–µ—Ç –æ –ø—Ä–∏–±—ã–ª–∏ —Å –ø—Ä–æ–¥–∞–∂', callback_data='report_sell'))
main_markup.add(types.InlineKeyboardButton('üìâ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á–µ—Ç –æ –∑–∞—Ç—Ä–∞—Ç–∞—Ö —Å –ø–æ–∫—É–ø–æ–∫', callback_data='report_buy'))
main_markup.add(types.InlineKeyboardButton('üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞—Ö', callback_data='refresh'))
# main_markup.add(types.InlineKeyboardButton('üî¥ –û—á–∏—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –æ–ø–µ—Ä–∞—Ü–∏–π', callback_data='clear_op_table'))

# –∫–Ω–æ–ø–∫–∏ –æ–ø–µ—Ä–∞—Ü–∏–π [inline]
ops_markup = types.InlineKeyboardMarkup()

ops_markup.add(types.InlineKeyboardButton('üí≤–ü–æ–∫—É–ø–∫–∞', callback_data='purchase'))
ops_markup.add(types.InlineKeyboardButton('üíµ –ü—Ä–æ–¥–∞–∂–∞', callback_data='sell'))
ops_markup.add(types.InlineKeyboardButton('üìå –°–ø–∏—Å–∞–Ω–∏–µ', callback_data='write_off'))
ops_markup.add(types.InlineKeyboardButton('üì¶ –í –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ', callback_data='production'))
ops_markup.add(types.InlineKeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel'))

# –ø–æ–ª–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ–∑–∏—Ü–∏–π [reply]
item_code_list = get_list(item_sheet, 2)
item_list = get_list(item_sheet, 1)
suggested_price_list = get_list(item_sheet, 3)
item_set = set(item_list)
item_markup = types.ReplyKeyboardMarkup()
for item, code, price in zip(item_list, item_code_list, suggested_price_list):
    item_markup.add(types.KeyboardButton(f'{code} | {item}'))
    globals.suggested_price[item] = price
item_markup.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))

# —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è [reply]
unit_list = get_list(unit_sheet, 1)
unit_set = set(unit_list)
unit_markup = types.ReplyKeyboardMarkup()
for unit in unit_list:
    unit_markup.add(types.KeyboardButton(unit))
unit_markup.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))

# —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π [reply]
buyer_list = get_list(buyer_sheet, 2)
buyer_set = set(buyer_list)
buyer_markup = types.ReplyKeyboardMarkup()
for buyer in buyer_list:
    buyer_markup.add(types.KeyboardButton(buyer))
buyer_markup.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))

# —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ [reply]
seller_list = get_list(seller_sheet, 2)
seller_set = set(seller_list)
seller_markup = types.ReplyKeyboardMarkup()
for seller in seller_list:
    seller_markup.add(types.KeyboardButton(seller))
seller_markup.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))

# —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ [reply]
employee_list = get_list(employee_sheet, 1)
employee_set = set(employee_list)
employee_markup = types.ReplyKeyboardMarkup()
for employee in employee_list:
    employee_markup.add(types.KeyboardButton(employee))
employee_markup.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))


# –∫–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã [reply]
cancel_markup = types.ReplyKeyboardMarkup()
cancel_markup.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))

# –∫–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è [reply]
confirm_markup = types.InlineKeyboardMarkup()
confirm_markup.add(types.InlineKeyboardButton('üî¥ –î–∞', callback_data='clear_confirmed'))
confirm_markup.add(types.InlineKeyboardButton('üü¢ –û—Ç–º–µ–Ω–∞', callback_data='cancel'))


# –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫-—Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
def refresh():
    global item_markup, item_list, item_set
    global unit_markup, unit_list, unit_set
    global buyer_markup, buyer_list, buyer_set
    global seller_markup, seller_list, seller_set
    global employee_markup, employee_list, employee_set

    item_code_list = get_list(item_sheet, 2)
    item_list = get_list(item_sheet, 1)
    suggested_price_list = get_list(item_sheet, 3)
    item_set = set(item_list)
    item_markup = types.ReplyKeyboardMarkup()
    globals.suggested_price = {}
    for item, code, price in zip(item_list, item_code_list, suggested_price_list):
        item_markup.add(types.KeyboardButton(f'{code} | {item}'))
        if price != '':
            globals.suggested_price[item] = price
    item_markup.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))

    unit_list = get_list(unit_sheet, 1)
    unit_set = set(unit_list)
    unit_markup = types.ReplyKeyboardMarkup()
    for unit in unit_list:
        unit_markup.add(types.KeyboardButton(unit))
    unit_markup.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))

    buyer_list = get_list(buyer_sheet, 2)
    buyer_set = set(buyer_list)
    buyer_markup = types.ReplyKeyboardMarkup()
    for buyer in buyer_list:
        buyer_markup.add(types.KeyboardButton(buyer))
    buyer_markup.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))

    seller_list = get_list(seller_sheet, 2)
    seller_set = set(seller_list)
    seller_markup = types.ReplyKeyboardMarkup()
    for seller in seller_list:
        seller_markup.add(types.KeyboardButton(seller))
    seller_markup.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))

    employee_list = get_list(employee_sheet, 1)
    employee_set = set(employee_list)
    employee_markup = types.ReplyKeyboardMarkup()
    for employee in employee_list:
        employee_markup.add(types.KeyboardButton(employee))
    employee_markup.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))
